package com.cabbooking.model;

import com.fasterxml.jackson.annotation.JsonIgnore;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import java.util.List;

/**
 * Represents a cab vehicle in the fleet.
 *
 * Main Responsibilities: - Stores details about each cab, such as its type and
 * per-kilometer rate. - Tracks the availability status of the cab for booking.
 *
 * Workflow: - Admins create and manage Cab entities. - The booking service
 * queries for available cabs when a trip is requested.
 */
@Entity
public class Cab {

    /**
     * The unique identifier for the cab. This is the primary key, automatically
     * generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer cabId;

    /**
     * The type or category of the cab (e.g., "Sedan", "SUV", "Hatchback").
     */
    private String carType;

    /**
     * The rate charged per kilometer for this cab.
     */
    private Float perKmRate;

    /**
     * The current availability status of the cab. 'true' if the cab is
     * available for a new trip, 'false' otherwise.
     */
    private Boolean isAvailable;

    /**
     * The list of trip bookings associated with this cab. This is a one-to-many
     * relationship where one cab can have multiple trip bookings.
     */
    @OneToMany(mappedBy = "cab", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    @JsonIgnore // Important to prevent infinite loops in API responses
    private List<TripBooking> tripBookings;

    // ======= Getters and Setters =======
    public Integer getCabId() {
        return cabId;
    }

    public void setCabId(Integer cabId) {
        this.cabId = cabId;
    }

    public String getCarType() {
        return carType;
    }

    public void setCarType(String carType) {
        this.carType = carType;
    }

    public Float getPerKmRate() {
        return perKmRate;
    }

    public void setPerKmRate(Float perKmRate) {
        this.perKmRate = perKmRate;
    }

    public Boolean getIsAvailable() {
        return isAvailable;
    }

    public void setIsAvailable(Boolean isAvailable) {
        this.isAvailable = isAvailable;
    }

    public List<TripBooking> getTripBookings() {
        return tripBookings;
    }

    public void setTripBookings(List<TripBooking> tripBookings) {
        this.tripBookings = tripBookings;
    }
}
